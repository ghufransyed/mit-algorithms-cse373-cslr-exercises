2.1-1
31 41 59 26 41 58 ->
31
31 41
31 41 59
31 41 59 26
31 41 59 59
31 41 41 59
31 31 41 59
26 31 41 59
26 31 41 59 41
26 31 41 59 59
26 31 41 41 59
26 31 41 41 59 58
26 31 41 41 59 59
26 31 41 41 58 59


2.1-2
see file in 01_ch directory

2.1-3
result <- NIL
for i <- 0 to A.length -1
    if A[i] = v
        result <- i
        return result
return result

Proof:
Initialization:
before the loop, result is NIL (the default return value)

Maintenance:
if A[i] = v, then result is assigned value of i and this is returned 
immediately
if A[i] != v, then result = NIL at the end of the loop

Termination:
When the loop terminates (when i = A.length - 1), result is returned, 
and the value of result is NIL if A[i] != v for all i

2.1-4
Input: Two n-element arrays, A and B, where each element is 0 or 1
Output: An (n+1)-element array C that contains the sum of the binary
numbers in A and B.

carry <- 0
result <- 0
C = [n+1]
for i <- n to 1
    result <- A[i] + B[i] + carry
    if result == 0
        C[i + 1] <- 0
    if result == 1
        C[i + 1] <- 1
    if result == 2
        C[i + 1] <- 0
        carry <- 1
    if result == 3
        C[i + 1] <- 1
        carry <- 1
if carry == 1
    C[i] <- 1
return result


